@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 270 100% 50%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 270 100% 50%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 270 100% 50%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 270 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .animate-fade-in {
    animation: fadeIn 1s ease-out forwards;
  }

  .animate-fade-in-delay {
    animation: fadeIn 1s ease-out 0.3s forwards;
    opacity: 0;
  }

  .animate-fade-in-delay-2 {
    animation: fadeIn 1s ease-out 0.6s forwards;
    opacity: 0;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-slow {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  .animate-spin-slow {
    animation: spin 8s linear infinite;
  }

  .animate-bounce-slow {
    animation: bounce 3s infinite;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
    100% {
      transform: translateY(0px);
    }
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  @keyframes glow {
    from {
      box-shadow: 0 0 10px -10px rgba(147, 51, 234, 0.5);
    }
    to {
      box-shadow: 0 0 20px 10px rgba(147, 51, 234, 0.5);
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  /* Button hover effects */
  .btn-hover-effect {
    position: relative;
    overflow: hidden;
    z-index: 1;
  }

  .btn-hover-effect::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: 0.5s;
    z-index: -1;
  }

  .btn-hover-effect:hover::before {
    left: 100%;
  }

  /* Text gradient animation */
  .animate-text-gradient {
    background-size: 200% 200%;
    animation: textGradient 2s linear infinite;
  }

  @keyframes textGradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  /* Reveal animation */
  .reveal {
    position: relative;
    overflow: hidden;
  }

  .reveal::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    transform: translateX(-100%);
    animation: reveal 1.5s cubic-bezier(0.77, 0, 0.18, 1);
  }

  @keyframes reveal {
    0% {
      transform: translateX(-100%);
    }
    50% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }
}


/* In app/globals.css, add these rules below the other WebGL fallback styles */

/* Apply fallback box-shadow and border if WebGL is not supported for the glow */
.glow-fallback {
    /* Remove WebGL canvas */
    /* The component hides the canvas, but adding display: none here isbelt-and-suspenders */
}

.glow-fallback .relative.z-10 {
     /* Ensure the content (Image) is visible and positioned */
     z-index: 1; /* Should already be set by the component */
     position: relative; /* Should already be set by the component */
}

/* Example CSS box-shadow fallback */
/* Use your purple and pink colors for the shadow */
.glow-fallback {
     /* Remove the old pulse animation class if it was still on the outer div */
     /* animation: none !important; */

     /* Add a box shadow that mimics the glow */
     box-shadow:
        0 0 25px rgba(147, 51, 234, 0.7), /* Purple glow */
        0 0 50px rgba(236, 72, 153, 0.5), /* Pink glow */
        inset 0 0 15px rgba(147, 51, 234, 0.2); /* Inner subtle glow */

     /* Optional: Add a subtle CSS animation for pulsing */
     animation: glowPulseFallback 3s ease-in-out infinite; /* Match timing from reference */
}

/* Define the fallback CSS animation */
@keyframes glowPulseFallback {
    0%, 100% {
        box-shadow:
            0 0 25px rgba(147, 51, 234, 0.7),
            0 0 50px rgba(236, 72, 153, 0.5),
            inset 0 0 15px rgba(147, 51, 234, 0.2);
    }
    50% {
         box-shadow:
            0 0 35px rgba(147, 51, 234, 0.9), /* Brighter pulse */
            0 0 70px rgba(236, 72, 153, 0.7), /* Brighter pulse */
            inset 0 0 20px rgba(147, 51, 234, 0.3);
    }
}
